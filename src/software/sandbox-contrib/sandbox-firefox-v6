#!/bin/sh -Cu
# This sandbox can be escaped! Use SELinux (or equivalent) for extra protection.
#
proxy_dir=${XDG_RUNTIME_DIR}/bus-proxy
proxy_name=${proxy_dir}/firefox-${$}

mkdir -p $proxy_dir

# Enhance sandbox by filtering dbus requests via proxy.
# Send to background.
#
xdg-dbus-proxy $DBUS_SESSION_BUS_ADDRESS $proxy_name			\
--filter								\
--broadcast=org.freedesktop.portal.*=@/org/freedesktop/portal/*		\
--call=org.freedesktop.portal.*=*					\
--own=org.mozilla.firefox.*						\
--own=org.mozilla.firefox_beta.*					\
--own=org.mpris.MediaPlayer2.firefox.*					\
--talk=org.a11y.Bus							\
--talk=org.gtk.vfs.*							\
--talk=org.pipewire.node						\
&

home=$HOME
tmpdir=/tmp

sleep 1

# Sandbox and run program.
# Keep in mind, `--new-session` is necessary to prevent TIOSCTL escapes.
#
bwrap --die-with-parent --new-session --unshare-ipc --unshare-pid	\
--clearenv								\
--setenv	DBUS_SESSION_BUS_ADDRESS unix:path=${tmpdir}/bus	\
--setenv	HOME ${home}						\
--setenv	MOZ_ENABLE_WAYLAND 1					\
--setenv	PATH /bin						\
--setenv	TMPDIR ${tmpdir}					\
--setenv	WAYLAND_DISPLAY ${tmpdir}/fake				\
--setenv	XDG_RUNTIME_DIR ${tmpdir}				\
--dev-bind	/dev/dri/renderD128 /dev/dri/renderD128			\
--dev-bind	/dev/null /dev/null					\
--proc		/proc							\
--bind		${XDG_CACHE_HOME}/mozilla ${home}/.cache/mozilla	\
--bind		${XDG_CONFIG_HOME}/mozilla ${home}/.mozilla		\
--bind		${proxy_name} ${tmpdir}/bus				\
--ro-bind	${XDG_RUNTIME_DIR}/wayland-1 ${tmpdir}/fake		\
--ro-bind	/etc		/etc					\
--ro-bind	/usr/bin	/usr/bin				\
--ro-bind	/usr/lib	/usr/lib				\
--ro-bind	/usr/share	/usr/share				\
--symlink	/usr/bin	/bin					\
--symlink	/usr/lib	/lib					\
firefox "${@}"

# Cleanup after sandbox ends.
# The last background process should be dbus-proxy.
#
kill ${!}
rm $proxy_name
rmdir -p $proxy_dir
